<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd">


    <!--    <bean id="h2Server" class="org.h2.tools.Server" factory-method="createTcpServer" init-method="start" destroy-method="stop" depends-on="h2WebServer">
            <constructor-arg value="-tcp,-tcpAllowOthers,-tcpPort,9092"/>
        </bean>-->

    <!--бин вэб сервера, задается метод и нициализации, уничтожения, создается через конструктор с параметрами value; webAllowOthers-?-->
    <bean id="h2WebServer" class="org.h2.tools.Server" factory-method="createWebServer" init-method="start"
          destroy-method="stop">
        <constructor-arg value="-web,-webAllowOthers,-webPort,8082"/>
    </bean>

    <!-- Зачем это все надо описано здесь http://www.studytrails.com/frameworks/spring/spring-hibernate-jpa.jsp -->

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:db.properties"/>
    </bean>

    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="default"/>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="javax.persistence.jdbc.driver">${jdbc.driver}</prop>
                <prop key="javax.persistence.jdbc.url">${jdbc.url}</prop>
                <prop key="javax.persistence.jdbc.user">${jdbc.user}</prop>
                <prop key="javax.persistence.jdbc.password">${jdbc.password}</prop>
            </props>
        </property>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <tx:annotation-driven/>


<!-- Description : Scans the classpath for annotated components that will be auto-registered as Spring beans.
    By default, the Spring-provided @Component, @Repository, @Service, and @Controller stereotypes will be detected. -->
    <!--<context:component-scan base-package="edu.roi.playbox.domain.dao"/>-->
    <context:component-scan base-package="edu.roi.playbox"/>

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.h2.Driver"/>
        <property name="url" value="jdbc:h2:mem:playbox"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>

        <jdbc:initialize-database data-source="dataSource">
            <jdbc:script location="classpath:sql/db-user-data.sql"/>
        </jdbc:initialize-database>
</beans>